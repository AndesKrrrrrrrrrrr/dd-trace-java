plugins {
  id 'idea'
  id 'java-test-fixtures'
}

apply from: "$rootDir/gradle/java.gradle"

dependencies {
  testImplementation project(':dd-smoke-tests')
  testImplementation(testFixtures(project(':dd-smoke-tests:iast-util')))
}

def appDir = "$projectDir/application"
def appBuildDir = "$buildDir/application"
def isWindows = System.getProperty('os.name').toLowerCase().contains("win")
def gradlewCommand = isWindows ? 'gradlew.bat' : 'gradlew'
// define the task that builds the grails project
tasks.register('grailsBuild', Exec) {
  workingDir "$appDir"
  environment += ['GRADLE_OPTS': "-Dorg.gradle.jvmargs='-Xmx512M'"]
  commandLine "$appDir/${gradlewCommand}", 'bootJar', '--no-daemon', '--max-workers=4', "-PappBuildDir=$appBuildDir"

  outputs.cacheIf { true }

  outputs.dir(appBuildDir)
    .withPropertyName('applicationJar')

  inputs.files(fileTree(appDir) {
    include '**/*'
    exclude '.gradle/**'
  })
  .withPropertyName('application')
  .withPathSensitivity(PathSensitivity.RELATIVE)
}

tasks.named('compileTestGroovy').configure {
  dependsOn 'grailsBuild'
  outputs.upToDateWhen {
    !grailsBuild.didWork
  }
}

tasks.withType(Test).configureEach {
  jvmArgs "-Ddatadog.smoketest.grails.shadowJar.path=$appBuildDir/libs/smoketest-0.1.jar"
}

spotless {
  java {
    target "**/*.java"
  }

  groovyGradle {
    target '*.gradle', "**/*.gradle"
  }
}

idea {
  module {
    excludeDirs += [file("$appDir")]
  }
}
