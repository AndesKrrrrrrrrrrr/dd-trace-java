plugins {
  id "com.github.johnrengelman.shadow"
}

// Set properties before any plugins get loaded
ext {
  enableJunitPlatform = true
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

apply from: "$rootDir/gradle/java.gradle"

dependencies {
  api deps.slf4j
  api project(':internal-api')

  implementation project(path: ':dd-java-agent:agent-profiling:profiling-async', configuration: 'shadow')
  api project(':dd-java-agent:agent-profiling:profiling-auxiliary')
  api project(':dd-java-agent:agent-profiling:profiling-auxiliary-async')
  api project(':dd-java-agent:agent-profiling:profiling-context')
  api project(':dd-java-agent:agent-profiling:profiling-uploader')
  api project(':dd-java-agent:agent-profiling:profiling-controller')
  api project(':dd-java-agent:agent-profiling:profiling-controller-async')
  api project(':dd-java-agent:agent-profiling:profiling-controller-openjdk')
  api project(':dd-java-agent:agent-profiling:profiling-controller-oracle')
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
  // exclude bootstrap dependencies from shadowJar
  runtime.exclude module: deps.slf4j
  runtime.exclude group: 'org.slf4j'
}

shadowJar {
  dependencies deps.excludeShared
  exclude {
    if (it.path.startsWith('org/jctools/')) {
      def ret = true
      if (it.path.equals('org/jctools/util') || it.path.equals('org/jctools/maps') || it.path.equals('org/jctools/queues')) {
        ret = false
      } else {
        ret = !(it.path.contains('/util') || it.path.contains('AbstractEntry') ||
          it.path.contains('ConcurrentAutoTable') || it.path.contains('NonBlockingHashMap') ||
          it.path.contains('MpscArrayQueue') || it.path.contains('ConcurrentCircularArrayQueue') ||
          it.path.contains('IndexedQueueSizeUtil') || it.path.contains('MessagePassingQueue') ||
          it.path.contains('QueueProgressIndicators') || it.path.contains('SupportsIterator'))
      }
      return ret
    }
    return false
  }
}

jar {
  classifier = 'unbundled'
}
